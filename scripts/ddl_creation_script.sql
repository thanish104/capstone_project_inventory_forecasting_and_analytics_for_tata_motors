-- create database DEV_DB;
-- create schema DEV_DB.CLEANSED_DNA;
-- create schema DEV_DB.SDL_RAW;
-- create schema DEV_DB.HISTORY_DNA;
-- create schema DEV_DB.CORE_DNA;
-- create schema DEV_DB.EDW_DNA;

create or replace TABLE DEV_DB.CLEANSED_DNA.CLEANSED_INVENTORY_TRANSACTION (
	HASH_KEY VARCHAR(128),
	HASH_ADDRESS VARCHAR(128),
	TM_FISCAL_YEAR VARCHAR(16777216),
	MONTH_NAME VARCHAR(16777216),
	MONTH VARCHAR(16777216),
	PARTNER_TYPE VARCHAR(16777216),
	DEALER VARCHAR(16777216),
	DEALER_CODE VARCHAR(16777216),
	DIVISION VARCHAR(16777216),
	REGION VARCHAR(16777216),
	JOB_CARD_NUMBER VARCHAR(16777216),
	JOB_CARD_CREATED_DATE TIMESTAMP_NTZ(9),
	JC_OPEN_DAYS NUMBER(38,0),
	JOB_CARD_CLOSED_DATE TIMESTAMP_NTZ(9),
	SERVICE_TYPE VARCHAR(16777216),
	KMS_RUN NUMBER(38,0),
	PART_NO VARCHAR(16777216),
	PART_DESC VARCHAR(16777216),
	CATEGORY VARCHAR(16777216),
	TM_PART_INDICATOR VARCHAR(16777216),
	SOLD_QTY NUMBER(38,0),
	TM_SPARES_AMOUNT NUMBER(18,2),
	SPARES_AMOUNT NUMBER(18,2),
	PPL VARCHAR(16777216),
	PL VARCHAR(16777216),
	LOB VARCHAR(16777216),
	INVOICE_STATUS VARCHAR(16777216),
	INVOICE_NUMBER VARCHAR(16777216),
	INVOICE_DATE DATE,
	LIQUID_FLAG NUMBER(1,0),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9)
);

create or replace TABLE DEV_DB.SDL_RAW.SDL_INVENTORY_TRANSACTION (
    SL_NO VARCHAR(16777216),
	TM_FISCAL_YEAR VARCHAR(16777216),
	MONTH_NAME VARCHAR(16777216),
	MONTH VARCHAR(16777216),
	PARTNER_TYPE VARCHAR(16777216),
	DEALER VARCHAR(16777216),
	DEALER_CODE VARCHAR(16777216),
	DIVISION VARCHAR(16777216),
	REGION VARCHAR(16777216),
	"JC #" VARCHAR(16777216),
	JOB_CARD_CREATED_DATE VARCHAR(16777216),
	JC_OPEN_DAYS VARCHAR(16777216),
	JOB_CARD_CLOSED_DATE VARCHAR(16777216),
	SERVICE_TYPE VARCHAR(16777216),
	KMS_RUN VARCHAR(16777216),
	PART_NO VARCHAR(16777216),
	PART_DESC VARCHAR(16777216),
	CATEGORY VARCHAR(16777216),
	TM_PART_INDICATOR VARCHAR(16777216),
	SOLD_QTY VARCHAR(16777216),
	TM_SPARES_AMOUNT VARCHAR(16777216),
	SPARES_AMOUNT VARCHAR(16777216),
	PPL VARCHAR(16777216),
	PL VARCHAR(16777216),
	LOB VARCHAR(16777216),
	INVOICE_STATUS VARCHAR(16777216),
	INVOICE_NUMBER VARCHAR(16777216),
	INVOICE_DATE VARCHAR(16777216)
);

create or replace TABLE DEV_DB.HISTORY_DNA.HISTORY_INVENTORY_TRANSACTION (
	HASH_KEY VARCHAR(128),
	HASH_ADDRESS VARCHAR(128),
	TM_FISCAL_YEAR VARCHAR(16777216),
	MONTH_NAME VARCHAR(16777216),
	MONTH VARCHAR(16777216),
	PARTNER_TYPE VARCHAR(16777216),
	DEALER VARCHAR(16777216),
	DEALER_CODE VARCHAR(16777216),
	DIVISION VARCHAR(16777216),
	REGION VARCHAR(16777216),
	JOB_CARD_NUMBER VARCHAR(16777216),
	JOB_CARD_CREATED_DATE TIMESTAMP_NTZ(9),
	JC_OPEN_DAYS NUMBER(38,0),
	JOB_CARD_CLOSED_DATE TIMESTAMP_NTZ(9),
	SERVICE_TYPE VARCHAR(16777216),
	KMS_RUN NUMBER(38,0),
	PART_NO VARCHAR(16777216),
	PART_DESC VARCHAR(16777216),
	CATEGORY VARCHAR(16777216),
	TM_PART_INDICATOR VARCHAR(16777216),
	SOLD_QTY NUMBER(38,0),
	TM_SPARES_AMOUNT NUMBER(18,2),
	SPARES_AMOUNT NUMBER(18,2),
	PPL VARCHAR(16777216),
	PL VARCHAR(16777216),
	LOB VARCHAR(16777216),
	INVOICE_STATUS VARCHAR(16777216),
	INVOICE_NUMBER VARCHAR(16777216),
	INVOICE_DATE DATE,
	LIQUID_FLAG NUMBER(1,0),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9)
);

create or replace TABLE DEV_DB.CORE_DNA.LOB (
	LOB_ID VARCHAR(128) NOT NULL,
	LINE_OF_BUSINESS VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (LOB_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.CAR (
	CAR_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	CAR_NAME VARCHAR(16777216),
	LOB_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (CAR_ID),
	foreign key (LOB_ID) references DEV_DB.CORE_DNA.LOB(LOB_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.CAR_MODEL (
	CAR_MODEL_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	CAR_MODEL_NAME VARCHAR(16777216),
	CAR_ID VARCHAR(128),
	LOB_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (CAR_MODEL_ID),
	foreign key (CAR_ID) references DEV_DB.CORE_DNA.CAR(CAR_ID),
	foreign key (LOB_ID) references DEV_DB.CORE_DNA.LOB(LOB_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.REGION (
	REGION_ID VARCHAR(128) NOT NULL,
	REGION_NAME VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (REGION_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.DIVISION (
	DIVISION_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	DIVISION_NAME VARCHAR(16777216),
	REGION_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (DIVISION_ID),
	foreign key (REGION_ID) references DEV_DB.CORE_DNA.REGION(REGION_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.DEALER (
	DEALER_CODE_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	DEALER_CODE VARCHAR(16777216),
	DEALER_NAME VARCHAR(16777216),
	PARTNER_TYPE VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (DEALER_CODE_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.DEALER_DIVISION_MAPPING (
    DEALER_DIVISION_ID VARCHAR(128) NOT NULL,
    HASH_ADDRESS VARCHAR(128),
    DIVISION_ID VARCHAR(128),
    DEALER_CODE_ID VARCHAR(128),
    CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
    primary key (DEALER_DIVISION_ID),
    foreign key (DIVISION_ID) references DEV_DB.CORE_DNA.DIVISION(DIVISION_ID),
    foreign key (DEALER_CODE_ID) references DEV_DB.CORE_DNA.DEALER(DEALER_CODE_ID)
);

-- create or replace TABLE DEV_DB.CORE_DNA.DEALER_DIVISION_MAPPING (
-- 	DEALER_DIVISION_ID VARCHAR(128) NOT NULL,
-- 	HASH_ADDRESS VARCHAR(128),
-- 	DIVISION_ID VARCHAR(128),
-- 	DEALER_CODE_ID VARCHAR(128),
-- 	CREATED_DATE TIMESTAMP_NTZ(9),
-- 	MODIFIED_DATE TIMESTAMP_NTZ(9),
-- 	primary key (DEALER_DIVISION_ID)
-- );

create or replace TABLE DEV_DB.CORE_DNA.SERVICE (
	SERVICE_ID VARCHAR(128) NOT NULL,
	SERVICE_TYPE VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (SERVICE_ID)
);


create or replace TABLE DEV_DB.CORE_DNA.JOB_CARD (
	JOB_CARD_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	JOB_CARD_NUM VARCHAR(16777216),
	JC_OPEN_DAYS NUMBER(38,0),
	JOB_CARD_CREATED_DATE TIMESTAMP_NTZ(9),
	JOB_CARD_CLOSED_DATE TIMESTAMP_NTZ(9),
	KMS_RUN NUMBER(38,0),
	DEALER_CODE_ID VARCHAR(128),
	CAR_MODEL_ID VARCHAR(128),
	SERVICE_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (JOB_CARD_ID),
	foreign key (DEALER_CODE_ID) references DEV_DB.CORE_DNA.DEALER(DEALER_CODE_ID),
	foreign key (CAR_MODEL_ID) references DEV_DB.CORE_DNA.CAR_MODEL(CAR_MODEL_ID),
	foreign key (SERVICE_ID) references DEV_DB.CORE_DNA.SERVICE(SERVICE_ID)
);



create or replace TABLE DEV_DB.CORE_DNA.INVOICE_LINE_ITEM (
	INVOICE_LINE_ITEM_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	INVOICE_NUMBER VARCHAR(16777216),
	INVOICE_DATE DATE,
	INVOICE_STATUS VARCHAR(16777216),
	JOB_CARD_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (INVOICE_LINE_ITEM_ID),
	foreign key (JOB_CARD_ID) references DEV_DB.CORE_DNA.JOB_CARD(JOB_CARD_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.PART_CATEGORY (
	CATEGORY_ID VARCHAR(128) NOT NULL,
	CATEGORY_NAME VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (CATEGORY_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.PARTS (
	PART_NO_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	PART_NO VARCHAR(16777216),
	PART_DESC VARCHAR(16777216),
	TM_PART_INDICATOR VARCHAR(16777216),
	TM_SPARES_AMOUNT NUMBER(18,2),
	SPARES_AMOUNT NUMBER(18,2),
	CATEGORY_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (PART_NO_ID),
	foreign key (CATEGORY_ID) references DEV_DB.CORE_DNA.PART_CATEGORY(CATEGORY_ID)
);

create or replace TABLE DEV_DB.CORE_DNA.INVOICE_LINE_ITEM_DETAILS (
	INVOICE_LINE_ITEM_DETAILS_ID VARCHAR(128) NOT NULL,
	HASH_ADDRESS VARCHAR(128),
	TM_SPARES_AMOUNT NUMBER(18,2),
	SOLD_QTY NUMBER(38,0),
	SPARES_AMOUNT NUMBER(18,2),
	INVOICE_LINE_ITEM_ID VARCHAR(128),
	JOB_CARD_ID VARCHAR(128),
	PART_NO_ID VARCHAR(128),
	CREATED_DATE TIMESTAMP_NTZ(9),
	MODIFIED_DATE TIMESTAMP_NTZ(9),
	primary key (INVOICE_LINE_ITEM_DETAILS_ID),
	foreign key (INVOICE_LINE_ITEM_ID) references DEV_DB.CORE_DNA.INVOICE_LINE_ITEM(INVOICE_LINE_ITEM_ID),
	foreign key (JOB_CARD_ID) references DEV_DB.CORE_DNA.JOB_CARD(JOB_CARD_ID),
	foreign key (PART_NO_ID) references DEV_DB.CORE_DNA.PARTS(PART_NO_ID)
);





